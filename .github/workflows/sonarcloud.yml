name: SonarCloud Analysis

on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run backend tests with coverage
        working-directory: ./backend
        run: |
          npm run test:coverage || true
        continue-on-error: true

      - name: Run frontend tests with coverage
        working-directory: ./frontend
        run: |
          npm run test:coverage || true
        continue-on-error: true

      - name: Run security tests
        run: |
          # Run vanilla JS tests and generate simple coverage report
          echo "Running security tests..."
          # Note: For vanilla JS, we'll rely on SonarCloud's built-in analysis
          
      - name: List coverage files (debug)
        run: |
          echo "Looking for coverage files..."
          find . -name "*.lcov" -o -name "coverage-final.json" -o -name "clover.xml" | head -10
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Additional arguments can be added here
          args: >
            -Dsonar.verbose=true

      - name: SonarCloud Quality Gate Check
        uses: sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Backend Security Audit
        working-directory: ./backend
        run: |
          npm audit --audit-level moderate || true
          npm audit --json > backend-audit.json || true
        continue-on-error: true

      - name: Frontend Security Audit
        working-directory: ./frontend
        run: |
          npm audit --audit-level moderate || true
          npm audit --json > frontend-audit.json || true
        continue-on-error: true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: |
            backend/backend-audit.json
            frontend/frontend-audit.json
        continue-on-error: true